/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BulkRenewal,
  BulkRenewalInterface,
} from "../../../src/iotxregistrar/BulkRenewal";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INS",
        name: "_ins",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ins",
    outputs: [
      {
        internalType: "contract INS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "names",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "renewAll",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "names",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "rentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161086338038061086383398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107d26100916000396000818160b9015261045101526107d26000f3fe60806040526004361061003f5760003560e01c806301ffc9a7146100445780633971d467146100795780636f14a0d1146100a7578063e8d6dbb4146100f3575b600080fd5b34801561005057600080fd5b5061006461005f366004610594565b610108565b60405190151581526020015b60405180910390f35b34801561008557600080fd5b506100996100943660046105dd565b6101a1565b604051908152602001610070565b3480156100b357600080fd5b506100db7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610070565b6101066101013660046105dd565b61026e565b005b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000148061019b57507fffffffff0000000000000000000000000000000000000000000000000000000082167fd1a70fd300000000000000000000000000000000000000000000000000000000145b92915050565b6000806101ac6103fe565b90508360005b81811015610264576000836001600160a01b03166383e7f6ff8989858181106101dd576101dd610658565b90506020028101906101ef919061066e565b896040518463ffffffff1660e01b815260040161020e939291906106bc565b6040805180830381865afa15801561022a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024e91906106f5565b60208101519051019490940193506001016101b2565b5050509392505050565b60006102786103fe565b9050826000805b828110156103c8576000846001600160a01b03166383e7f6ff8989858181106102aa576102aa610658565b90506020028101906102bc919061066e565b896040518463ffffffff1660e01b81526004016102db939291906106bc565b6040805180830381865afa1580156102f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031b91906106f5565b90506000816020015182600001516103339190610752565b9050856001600160a01b031663acf1a841828b8b8781811061035757610357610658565b9050602002810190610369919061066e565b8b6040518563ffffffff1660e01b8152600401610388939291906106bc565b6000604051808303818588803b1580156103a157600080fd5b505af11580156103b5573d6000803e3d6000fd5b505050919094019350505060010161027f565b5060405133904780156108fc02916000818181858888f193505050501580156103f5573d6000803e3d6000fd5b50505050505050565b6040517f0178b8bf0000000000000000000000000000000000000000000000000000000081527fb2b692c69df4aa3b0a24634d20a3ba1b44c3299d09d6c4377577e20b09e68395600482015260009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630178b8bf90602401602060405180830381865afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610773565b6040517f124a319c0000000000000000000000000000000000000000000000000000000081527fb2b692c69df4aa3b0a24634d20a3ba1b44c3299d09d6c4377577e20b09e6839560048201527f612e8c090000000000000000000000000000000000000000000000000000000060248201529091506001600160a01b0382169063124a319c90604401602060405180830381865afa15801561056a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058e9190610773565b91505090565b6000602082840312156105a657600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146105d657600080fd5b9392505050565b6000806000604084860312156105f257600080fd5b833567ffffffffffffffff8082111561060a57600080fd5b818601915086601f83011261061e57600080fd5b81358181111561062d57600080fd5b8760208260051b850101111561064257600080fd5b6020928301989097509590910135949350505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261068557600080fd5b83018035915067ffffffffffffffff8211156106a057600080fd5b6020019150368190038213156106b557600080fd5b9250929050565b604081528260408201528284606083013760006060848301015260006060601f19601f8601168301019050826020830152949350505050565b60006040828403121561070757600080fd5b6040516040810181811067ffffffffffffffff8211171561073857634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b8082018082111561019b57634e487b7160e01b600052601160045260246000fd5b60006020828403121561078557600080fd5b81516001600160a01b03811681146105d657600080fdfea2646970667358221220ddd504a587c8fa423667bf280111e8b73a6e187bd778ccfd255c879b9fc46b1464736f6c63430008110033";

type BulkRenewalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BulkRenewalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BulkRenewal__factory extends ContractFactory {
  constructor(...args: BulkRenewalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ins: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BulkRenewal> {
    return super.deploy(_ins, overrides || {}) as Promise<BulkRenewal>;
  }
  override getDeployTransaction(
    _ins: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ins, overrides || {});
  }
  override attach(address: string): BulkRenewal {
    return super.attach(address) as BulkRenewal;
  }
  override connect(signer: Signer): BulkRenewal__factory {
    return super.connect(signer) as BulkRenewal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BulkRenewalInterface {
    return new utils.Interface(_abi) as BulkRenewalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BulkRenewal {
    return new Contract(address, _abi, signerOrProvider) as BulkRenewal;
  }
}
