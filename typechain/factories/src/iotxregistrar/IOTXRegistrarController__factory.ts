/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  IOTXRegistrarController,
  IOTXRegistrarControllerInterface,
} from "../../../src/iotxregistrar/IOTXRegistrarController";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract BaseRegistrarImplementation",
        name: "_base",
        type: "address",
      },
      {
        internalType: "contract IPriceOracle",
        name: "_prices",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minCommitmentAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxCommitmentAge",
        type: "uint256",
      },
      {
        internalType: "contract ReverseRegistrar",
        name: "_reverseRegistrar",
        type: "address",
      },
      {
        internalType: "contract INameWrapper",
        name: "_nameWrapper",
        type: "address",
      },
      {
        internalType: "contract INameChecker",
        name: "_nameChecker",
        type: "address",
      },
      {
        internalType: "contract INS",
        name: "_ins",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "CommitmentTooNew",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "CommitmentTooOld",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "DurationTooShort",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxCommitmentAgeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxCommitmentAgeTooLow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NameNotAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "ResolverRequiredWhenDataSupplied",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "UnexpiredCommitmentExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRenewed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_REGISTRATION_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "commit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "reverseRecord",
        type: "bool",
      },
      {
        internalType: "uint16",
        name: "ownerControlledFuses",
        type: "uint16",
      },
    ],
    name: "makeCommitment",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCommitmentAge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCommitmentAge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nameChecker",
    outputs: [
      {
        internalType: "contract INameChecker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nameWrapper",
    outputs: [
      {
        internalType: "contract INameWrapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prices",
    outputs: [
      {
        internalType: "contract IPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "recoverFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "reverseRecord",
        type: "bool",
      },
      {
        internalType: "uint16",
        name: "ownerControlledFuses",
        type: "uint16",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "renew",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "rentPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "base",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceOracle.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reverseRegistrar",
    outputs: [
      {
        internalType: "contract ReverseRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "valid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200209a3803806200209a83398101604081905262000035916200022b565b80336200004281620001c2565b6040516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260048201526000906001600160a01b038416906302571be390602401602060405180830381865afa158015620000aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d09190620002d5565b604051630f41a04d60e11b81526001600160a01b03848116600483015291925090821690631e83409a906024016020604051808303816000875af11580156200011d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001439190620002fc565b5050505085851162000168576040516307cb550760e31b815260040160405180910390fd5b428511156200018a57604051630b4319e560e21b815260040160405180910390fd5b506001600160a01b0396871660805294861660a05260c09390935260e091909152831661010052821661012052166101405262000316565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200022857600080fd5b50565b600080600080600080600080610100898b0312156200024957600080fd5b8851620002568162000212565b60208a0151909850620002698162000212565b80975050604089015195506060890151945060808901516200028b8162000212565b60a08a01519094506200029e8162000212565b60c08a0151909350620002b18162000212565b60e08a0151909250620002c48162000212565b809150509295985092959890939650565b600060208284031215620002e857600080fd5b8151620002f58162000212565b9392505050565b6000602082840312156200030f57600080fd5b5051919050565b60805160a05160c05160e051610100516101205161014051611cea620003b0600039600081816101cd0152610b750152600081816103b40152818161081f0152610ca801526000818161028f01526112b701526000818161041b01528181610e8a01526110de015260008181610342015261106701526000818161044f0152610a39015260008181610a6e0152610df90152611cea6000f3fe60806040526004361061016a5760003560e01c80638a95b09f116100cb578063acf1a8411161007f578063d3419bf311610059578063d3419bf31461043d578063f14fcbc814610471578063f2fde38b1461049157600080fd5b8063acf1a841146103d6578063aeb8ce9b146103e9578063ce1e09c01461040957600080fd5b80638da5cb5b116100b05780638da5cb5b146103645780639791c09714610382578063a8e5fbc0146103a257600080fd5b80638a95b09f146103195780638d839ffe1461033057600080fd5b8063715018a6116101225780638086985311610107578063808698531461027d578063839df945146102b157806383e7f6ff146102de57600080fd5b8063715018a61461025557806374694a2b1461026a57600080fd5b806355ec848f1161015357806355ec848f146101bb5780635d3590d51461020757806365a69dcf1461022757600080fd5b806301ffc9a71461016f5780633ccfd60b146101a4575b600080fd5b34801561017b57600080fd5b5061018f61018a366004611369565b6104b1565b60405190151581526020015b60405180910390f35b3480156101b057600080fd5b506101b961054a565b005b3480156101c757600080fd5b506101ef7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161019b565b34801561021357600080fd5b506101b96102223660046113c7565b610587565b34801561023357600080fd5b50610247610242366004611534565b610621565b60405190815260200161019b565b34801561026157600080fd5b506101b96106bf565b6101b9610278366004611637565b6106d3565b34801561028957600080fd5b506101ef7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102bd57600080fd5b506102476102cc366004611701565b60016020526000908152604090205481565b3480156102ea57600080fd5b506102fe6102f936600461171a565b6109ef565b6040805182518152602092830151928101929092520161019b565b34801561032557600080fd5b506102476224ea0081565b34801561033c57600080fd5b506102477f000000000000000000000000000000000000000000000000000000000000000081565b34801561037057600080fd5b506000546001600160a01b03166101ef565b34801561038e57600080fd5b5061018f61039d36600461175f565b610b42565b3480156103ae57600080fd5b506101ef7f000000000000000000000000000000000000000000000000000000000000000081565b6101b96103e4366004611794565b610beb565b3480156103f557600080fd5b5061018f61040436600461175f565b610db0565b34801561041557600080fd5b506102477f000000000000000000000000000000000000000000000000000000000000000081565b34801561044957600080fd5b506101ef7f000000000000000000000000000000000000000000000000000000000000000081565b34801561047d57600080fd5b506101b961048c366004611701565b610e73565b34801561049d57600080fd5b506101b96104ac3660046117e0565b610f01565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000148061054457507fffffffff0000000000000000000000000000000000000000000000000000000082167f612e8c0900000000000000000000000000000000000000000000000000000000145b92915050565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610584573d6000803e3d6000fd5b50565b61058f610f8e565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b91906117fb565b50505050565b885160208a0120600090841580159061064157506001600160a01b038716155b15610678576040517fd3f605c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808a8a8a8a8a8a8a8a604051602001610699999897969594939291906118d3565b604051602081830303815290604052805190602001209150509998505050505050505050565b6106c7610f8e565b6106d16000610fe8565b565b60006107168b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c92506109ef915050565b602081015181519192506107299161194b565b3410156107495760405163044044a560e21b815260040160405180910390fd5b6107ec8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050896107e78e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508d8d8d8d8d8d8d8d610621565b611050565b6040517fa40149820000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a40149829061085e908f908f908f908f908e908b9060040161195e565b6020604051808303816000875af115801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a191906119a8565b905084156108cc576108cc878d8d6040516108bd9291906119c1565b604051809103902088886111d2565b8315610915576109158c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508b92508e91506112b59050565b896001600160a01b03168c8c60405161092f9291906119c1565b60405180910390207f69e37f151eb98a09618ddaa80c8cfaf1ce5996867c489f45b555b412271ebf278e8e86600001518760200151876040516109769594939291906119d1565b60405180910390a36020820151825161098f919061194b565b3411156109e1576020820151825133916108fc916109ad919061194b565b6109b79034611a02565b6040518115909202916000818181858888f193505050501580156109df573d6000803e3d6000fd5b505b505050505050505050505050565b6040805180820190915260008082526020820152825160208401206040517fd6e4fa86000000000000000000000000000000000000000000000000000000008152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03908116916350e9a7159187917f00000000000000000000000000000000000000000000000000000000000000009091169063d6e4fa8690602401602060405180830381865afa158015610ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adb91906119a8565b866040518463ffffffff1660e01b8152600401610afa93929190611a65565b6040805180830381865afa158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3a9190611a8a565b949350505050565b6040517f9791c0970000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639791c09790610baa908590600401611ad9565b602060405180830381865afa158015610bc7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054491906117fb565b60008383604051610bfd9291906119c1565b604080519182900382206020601f870181900481028401810190925285835292508291600091610c4a919088908890819084018382808284376000920191909152508892506109ef915050565b8051909150341015610c6f5760405163044044a560e21b815260040160405180910390fd5b6040517fc475abff00000000000000000000000000000000000000000000000000000000815260048101839052602481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c475abff906044016020604051808303816000875af1158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d91906119a8565b8251909150341115610d6557815133906108fc90610d3b9034611a02565b6040518115909202916000818181858888f19350505050158015610d63573d6000803e3d6000fd5b505b837f3da24c024582931cfaf8267d8ed24d13a82a8068d5bd337d30ec45cea4e506ae8888856000015185604051610d9f9493929190611aec565b60405180910390a250505050505050565b80516020820120600090610dc383610b42565b8015610e6c57506040517f96e494e8000000000000000000000000000000000000000000000000000000008152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396e494e890602401602060405180830381865afa158015610e48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6c91906117fb565b9392505050565b6000818152600160205260409020544290610eaf907f00000000000000000000000000000000000000000000000000000000000000009061194b565b10610eee576040517f0a059d71000000000000000000000000000000000000000000000000000000008152600481018290526024015b60405180910390fd5b6000908152600160205260409020429055565b610f09610f8e565b6001600160a01b038116610f855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610ee5565b61058481610fe8565b6000546001600160a01b031633146106d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ee5565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815260016020526040902054429061108c907f00000000000000000000000000000000000000000000000000000000000000009061194b565b11156110c7576040517f5320bcf900000000000000000000000000000000000000000000000000000000815260048101829052602401610ee5565b6000818152600160205260409020544290611103907f00000000000000000000000000000000000000000000000000000000000000009061194b565b1161113d576040517fcb7690d700000000000000000000000000000000000000000000000000000000815260048101829052602401610ee5565b61114683610db0565b61117e57826040517f477707e8000000000000000000000000000000000000000000000000000000008152600401610ee59190611ad9565b6000818152600160205260408120556224ea008210156111cd576040517f9a71997b00000000000000000000000000000000000000000000000000000000815260048101839052602401610ee5565b505050565b604080517fb2b692c69df4aa3b0a24634d20a3ba1b44c3299d09d6c4377577e20b09e68395602080830191909152818301869052825180830384018152606083019384905280519101207fe32954eb0000000000000000000000000000000000000000000000000000000090925285906001600160a01b0382169063e32954eb9061126590859088908890606401611b13565b6000604051808303816000875af1158015611284573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112ac9190810190611b36565b50505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637a806d6b828385876040516020016112f89190611c35565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016113269493929190611c76565b6020604051808303816000875af1158015611345573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b91906119a8565b60006020828403121561137b57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610e6c57600080fd5b80356001600160a01b03811681146113c257600080fd5b919050565b6000806000606084860312156113dc57600080fd5b6113e5846113ab565b92506113f3602085016113ab565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561144257611442611403565b604052919050565b600067ffffffffffffffff82111561146457611464611403565b50601f01601f191660200190565b600082601f83011261148357600080fd5b81356114966114918261144a565b611419565b8181528460208386010111156114ab57600080fd5b816020850160208301376000918101602001919091529392505050565b60008083601f8401126114da57600080fd5b50813567ffffffffffffffff8111156114f257600080fd5b6020830191508360208260051b850101111561150d57600080fd5b9250929050565b801515811461058457600080fd5b803561ffff811681146113c257600080fd5b60008060008060008060008060006101008a8c03121561155357600080fd5b893567ffffffffffffffff8082111561156b57600080fd5b6115778d838e01611472565b9a5061158560208d016113ab565b995060408c0135985060608c013597506115a160808d016113ab565b965060a08c01359150808211156115b757600080fd5b506115c48c828d016114c8565b90955093505060c08a01356115d881611514565b91506115e660e08b01611522565b90509295985092959850929598565b60008083601f84011261160757600080fd5b50813567ffffffffffffffff81111561161f57600080fd5b60208301915083602082850101111561150d57600080fd5b6000806000806000806000806000806101008b8d03121561165757600080fd5b8a3567ffffffffffffffff8082111561166f57600080fd5b61167b8e838f016115f5565b909c509a508a915061168f60208e016113ab565b995060408d0135985060608d013597506116ab60808e016113ab565b965060a08d01359150808211156116c157600080fd5b506116ce8d828e016114c8565b90955093505060c08b01356116e281611514565b91506116f060e08c01611522565b90509295989b9194979a5092959850565b60006020828403121561171357600080fd5b5035919050565b6000806040838503121561172d57600080fd5b823567ffffffffffffffff81111561174457600080fd5b61175085828601611472565b95602094909401359450505050565b60006020828403121561177157600080fd5b813567ffffffffffffffff81111561178857600080fd5b610b3a84828501611472565b6000806000604084860312156117a957600080fd5b833567ffffffffffffffff8111156117c057600080fd5b6117cc868287016115f5565b909790965060209590950135949350505050565b6000602082840312156117f257600080fd5b610e6c826113ab565b60006020828403121561180d57600080fd5b8151610e6c81611514565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b810191508460005b878110156118c65782840389528135601e1988360301811261187c57600080fd5b8701858101903567ffffffffffffffff81111561189857600080fd5b8036038213156118a757600080fd5b6118b2868284611818565b9a87019a955050509084019060010161185b565b5091979650505050505050565b60006101008b83526001600160a01b03808c1660208501528a60408501528960608501528089166080850152508060a08401526119138184018789611841565b94151560c0840152505061ffff9190911660e090910152979650505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561054457610544611935565b60a08152600061197260a08301888a611818565b90506001600160a01b03808716602084015285604084015280851660608401525061ffff83166080830152979650505050505050565b6000602082840312156119ba57600080fd5b5051919050565b8183823760009101908152919050565b6080815260006119e5608083018789611818565b602083019590955250604081019290925260609091015292915050565b8181038181111561054457610544611935565b60005b83811015611a30578181015183820152602001611a18565b50506000910152565b60008151808452611a51816020860160208601611a15565b601f01601f19169290920160200192915050565b606081526000611a786060830186611a39565b60208301949094525060400152919050565b600060408284031215611a9c57600080fd5b6040516040810181811067ffffffffffffffff82111715611abf57611abf611403565b604052825181526020928301519281019290925250919050565b602081526000610e6c6020830184611a39565b606081526000611b00606083018688611818565b6020830194909452506040015292915050565b838152604060208201526000611b2d604083018486611841565b95945050505050565b60006020808385031215611b4957600080fd5b825167ffffffffffffffff80821115611b6157600080fd5b818501915085601f830112611b7557600080fd5b815181811115611b8757611b87611403565b8060051b611b96858201611419565b9182528381018501918581019089841115611bb057600080fd5b86860192505b83831015611c2857825185811115611bce5760008081fd5b8601603f81018b13611be05760008081fd5b878101516040611bf26114918361144a565b8281528d82848601011115611c075760008081fd5b611c16838c8301848701611a15565b85525050509186019190860190611bb6565b9998505050505050505050565b60008251611c47818460208701611a15565b7f2e696f0000000000000000000000000000000000000000000000000000000000920191825250600301919050565b60006001600160a01b038087168352808616602084015280851660408401525060806060830152611caa6080830184611a39565b969550505050505056fea2646970667358221220bc1c9f03876d7c1d0f548aa7b6955456c4448ead916c14257d8fe770c42d9b7464736f6c63430008110033";

type IOTXRegistrarControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IOTXRegistrarControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IOTXRegistrarController__factory extends ContractFactory {
  constructor(...args: IOTXRegistrarControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _base: PromiseOrValue<string>,
    _prices: PromiseOrValue<string>,
    _minCommitmentAge: PromiseOrValue<BigNumberish>,
    _maxCommitmentAge: PromiseOrValue<BigNumberish>,
    _reverseRegistrar: PromiseOrValue<string>,
    _nameWrapper: PromiseOrValue<string>,
    _nameChecker: PromiseOrValue<string>,
    _ins: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IOTXRegistrarController> {
    return super.deploy(
      _base,
      _prices,
      _minCommitmentAge,
      _maxCommitmentAge,
      _reverseRegistrar,
      _nameWrapper,
      _nameChecker,
      _ins,
      overrides || {}
    ) as Promise<IOTXRegistrarController>;
  }
  override getDeployTransaction(
    _base: PromiseOrValue<string>,
    _prices: PromiseOrValue<string>,
    _minCommitmentAge: PromiseOrValue<BigNumberish>,
    _maxCommitmentAge: PromiseOrValue<BigNumberish>,
    _reverseRegistrar: PromiseOrValue<string>,
    _nameWrapper: PromiseOrValue<string>,
    _nameChecker: PromiseOrValue<string>,
    _ins: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _base,
      _prices,
      _minCommitmentAge,
      _maxCommitmentAge,
      _reverseRegistrar,
      _nameWrapper,
      _nameChecker,
      _ins,
      overrides || {}
    );
  }
  override attach(address: string): IOTXRegistrarController {
    return super.attach(address) as IOTXRegistrarController;
  }
  override connect(signer: Signer): IOTXRegistrarController__factory {
    return super.connect(signer) as IOTXRegistrarController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IOTXRegistrarControllerInterface {
    return new utils.Interface(_abi) as IOTXRegistrarControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOTXRegistrarController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IOTXRegistrarController;
  }
}
