/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestNameEncoder,
  TestNameEncoderInterface,
} from "../../../src/utils/TestNameEncoder";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "encodeName",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610557806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806318d321ca14610030575b600080fd5b61004361003e366004610370565b61005a565b60405161005192919061043f565b60405180910390f35b6060600061006783610070565b91509150915091565b8051606090600090819084906100878160026104b2565b67ffffffffffffffff81111561009f5761009f610341565b6040519080825280601f01601f1916602001820160405280156100c9576020820181803683370190505b5094506000935080840361012657600060f81b856000815181106100ef576100ef6104f2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350505050915091565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81015b82818151811061015c5761015c6104f2565b01602001517fff00000000000000000000000000000000000000000000000000000000000000167f2e0000000000000000000000000000000000000000000000000000000000000003610236578360f81b8682600101815181106101c2576101c26104f2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535084610203846001840160ff881661031d565b6040805160208101939093528201526060016040516020818303038152906040528051906020012094506000935061029e565b60018401935082818151811061024e5761024e6104f2565b602001015160f81c60f81b86826001018151811061026e5761026e6104f2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b80156102cb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161014a565b50836102dc83600060ff871661031d565b6040805160208101939093528201526060016040516020818303038152906040528051906020012093508260f81b856000815181106100ef576100ef6104f2565b825160009061032c83856104b2565b111561033757600080fd5b5091016020012090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561038257600080fd5b813567ffffffffffffffff8082111561039a57600080fd5b818401915084601f8301126103ae57600080fd5b8135818111156103c0576103c0610341565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561040657610406610341565b8160405282815287602084870101111561041f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b604081526000835180604084015260005b8181101561046d5760208187018101516060868401015201610450565b5060006060828501015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168401019150508260208301529392505050565b808201808211156104ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220bc2ab52a5e25995c8b7fe1432b5c79909b72a8c5da753e71e44ef530dd3e965064736f6c63430008110033";

type TestNameEncoderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestNameEncoderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestNameEncoder__factory extends ContractFactory {
  constructor(...args: TestNameEncoderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestNameEncoder> {
    return super.deploy(overrides || {}) as Promise<TestNameEncoder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestNameEncoder {
    return super.attach(address) as TestNameEncoder;
  }
  override connect(signer: Signer): TestNameEncoder__factory {
    return super.connect(signer) as TestNameEncoder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestNameEncoderInterface {
    return new utils.Interface(_abi) as TestNameEncoderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestNameEncoder {
    return new Contract(address, _abi, signerOrProvider) as TestNameEncoder;
  }
}
