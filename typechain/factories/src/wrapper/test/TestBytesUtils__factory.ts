/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestBytesUtils,
  TestBytesUtilsInterface,
} from "../../../../src/wrapper/test/TestBytesUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "namehash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "readLabel",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103c8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806390497d231461003b578063ecc4401d14610068575b600080fd5b61004e6100493660046102c8565b610089565b604080519283526020830191909152015b60405180910390f35b61007b6100763660046102c8565b6100db565b60405190815260200161005f565b6000806100cf8386868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506101289050565b91509150935093915050565b60006101208285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506101e49050565b949350505050565b600080835183106101805760405162461bcd60e51b815260206004820152601e60248201527f726561644c6162656c3a20496e646578206f7574206f6620626f756e6473000060448201526064015b60405180910390fd5b600084848151811061019457610194610340565b016020015160f81c905080156101c0576101b9856101b386600161036c565b836102a4565b92506101c5565b600092505b6101cf818561036c565b6101da90600161036c565b9150509250929050565b60008060006101f38585610128565b909250905081610265576001855161020b919061037f565b84146102595760405162461bcd60e51b815260206004820152601d60248201527f6e616d65686173683a204a756e6b20617420656e64206f66206e616d650000006044820152606401610177565b506000915061029e9050565b61026f85826101e4565b604080516020810192909252810183905260600160405160208183030381529060405280519060200120925050505b92915050565b82516000906102b3838561036c565b11156102be57600080fd5b5091016020012090565b6000806000604084860312156102dd57600080fd5b833567ffffffffffffffff808211156102f557600080fd5b818601915086601f83011261030957600080fd5b81358181111561031857600080fd5b87602082850101111561032a57600080fd5b6020928301989097509590910135949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561029e5761029e610356565b8181038181111561029e5761029e61035656fea2646970667358221220339978023ca27625e31549210808c41a015e8707152f189aa9500af9daba00a164736f6c63430008110033";

type TestBytesUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestBytesUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestBytesUtils__factory extends ContractFactory {
  constructor(...args: TestBytesUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestBytesUtils> {
    return super.deploy(overrides || {}) as Promise<TestBytesUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestBytesUtils {
    return super.attach(address) as TestBytesUtils;
  }
  override connect(signer: Signer): TestBytesUtils__factory {
    return super.connect(signer) as TestBytesUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestBytesUtilsInterface {
    return new utils.Interface(_abi) as TestBytesUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestBytesUtils {
    return new Contract(address, _abi, signerOrProvider) as TestBytesUtils;
  }
}
