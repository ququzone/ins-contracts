/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PublicResolver,
  PublicResolverInterface,
} from "../../../src/resolvers/PublicResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INS",
        name: "_ins",
        type: "address",
      },
      {
        internalType: "contract INameWrapper",
        name: "wrapperAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trustedETHController",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trustedReverseRegistrar",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "contentType",
        type: "uint256",
      },
    ],
    name: "ABIChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "AddrChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "coinType",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "newAddress",
        type: "bytes",
      },
    ],
    name: "AddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "Approved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "hash",
        type: "bytes",
      },
    ],
    name: "ContenthashChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementer",
        type: "address",
      },
    ],
    name: "InterfaceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NameChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "x",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "y",
        type: "bytes32",
      },
    ],
    name: "PubkeyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "indexedKey",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "TextChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "newVersion",
        type: "uint64",
      },
    ],
    name: "VersionChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "contentTypes",
        type: "uint256",
      },
    ],
    name: "ABI",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "addr",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "coinType",
        type: "uint256",
      },
    ],
    name: "addr",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "clearRecords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "contenthash",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "interfaceImplementer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "isApprovedFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "nodehash",
        type: "bytes32",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicallWithNodeCheck",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "pubkey",
    outputs: [
      {
        internalType: "bytes32",
        name: "x",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "y",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "recordVersions",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "contentType",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "setABI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "coinType",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "a",
        type: "bytes",
      },
    ],
    name: "setAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "setAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "hash",
        type: "bytes",
      },
    ],
    name: "setContenthash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "implementer",
        type: "address",
      },
    ],
    name: "setInterface",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "newName",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "x",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "y",
        type: "bytes32",
      },
    ],
    name: "setPubkey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "setText",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "text",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002a3d38038062002a3d83398101604081905262000035916200017a565b6040516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e26004820152849033906000906001600160a01b038416906302571be390602401602060405180830381865afa158015620000a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c79190620001e2565b604051630f41a04d60e11b81526001600160a01b03848116600483015291925090821690631e83409a906024016020604051808303816000875af115801562000114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013a919062000209565b5050506001600160a01b039485166080525091831660a052821660c0521660e05262000223565b6001600160a01b03811681146200017757600080fd5b50565b600080600080608085870312156200019157600080fd5b84516200019e8162000161565b6020860151909450620001b18162000161565b6040860151909350620001c48162000161565b6060860151909250620001d78162000161565b939692955090935050565b600060208284031215620001f557600080fd5b8151620002028162000161565b9392505050565b6000602082840312156200021c57600080fd5b5051919050565b60805160a05160c05160e0516127d9620002646000396000611511015260006114d20152600081816115f601526116760152600061157201526127d96000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80638b95dd71116100ee578063c869023311610097578063e32954eb11610071578063e32954eb1461044f578063e59d895d14610462578063e985e9c514610475578063f1cb7e06146104be57600080fd5b8063c8690233146103a0578063d5fa2b00146103f9578063d700ff331461040c57600080fd5b8063a9784b3e116100c8578063a9784b3e1461031c578063ac9650d81461036d578063bc1c58d11461038d57600080fd5b80638b95dd71146102e3578063a22cb465146102f6578063a4b91a011461030957600080fd5b80633603d75811610150578063623195b01161012a578063623195b0146102aa578063691f3431146102bd57806377372213146102d057600080fd5b80633603d758146102645780633b3b57de1461027757806359d1d43c1461028a57600080fd5b80632203ab56116101815780632203ab561461021d57806329cd62ea1461023e578063304e6ade1461025157600080fd5b806301ffc9a7146101a857806310f13a8c146101d0578063124a319c146101e5575b600080fd5b6101bb6101b6366004611d37565b6104d1565b60405190151581526020015b60405180910390f35b6101e36101de366004611d94565b6104e2565b005b6101f86101f3366004611e0e565b6105af565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c7565b61023061022b366004611e3a565b61090a565b6040516101c7929190611eac565b6101e361024c366004611ec5565b610a41565b6101e361025f366004611ef1565b610adc565b6101e3610272366004611f3d565b610b58565b6101f8610285366004611f3d565b610bfb565b61029d610298366004611ef1565b610c2d565b6040516101c79190611f56565b6101e36102b8366004611f69565b610d0d565b61029d6102cb366004611f3d565b610daa565b6101e36102de366004611ef1565b610e69565b6101e36102f1366004611feb565b610ee5565b6101e36103043660046120e4565b610fd2565b6101e3610317366004612110565b611113565b6101bb61032a36600461214e565b73ffffffffffffffffffffffffffffffffffffffff9283166000908152600960209081526040808320948352938152838220929094168152925290205460ff1690565b61038061037b3660046121d5565b611232565b6040516101c79190612217565b61029d61039b366004611f3d565b611240565b6103e46103ae366004611f3d565b6000818152602081815260408083205467ffffffffffffffff168352600682528083209383529290522080546001909101549091565b604080519283526020830191909152016101c7565b6101e3610407366004612297565b61127a565b61043661041a366004611f3d565b60006020819052908152604090205467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101c7565b61038061045d3660046122c7565b6112a1565b6101e3610470366004612306565b6112b6565b6101bb61048336600461233b565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260086020908152604080832093909416825291909152205460ff1690565b61029d6104cc366004611e3a565b61139a565b60006104dc82611462565b92915050565b846104ec816114b8565b6104f557600080fd5b6000868152602081815260408083205467ffffffffffffffff16835260078252808320898452909152908190209051849184916105359089908990612369565b9081526020016040518091039020918261055092919061241a565b508484604051610561929190612369565b6040518091039020867f448bc014f1536726cf8d54ff3d6481ed3cbc683c2591ca204274009afa09b1a18787878760405161059f9493929190612505565b60405180910390a3505050505050565b6000828152602081815260408083205467ffffffffffffffff1683526004825280832085845282528083207fffffffff000000000000000000000000000000000000000000000000000000008516845290915281205473ffffffffffffffffffffffffffffffffffffffff1680156106285790506104dc565b600061063385610bfb565b905073ffffffffffffffffffffffffffffffffffffffff811661065b576000925050506104dc565b6040517f01ffc9a7000000000000000000000000000000000000000000000000000000006024820152600090819073ffffffffffffffffffffffffffffffffffffffff84169060440160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a700000000000000000000000000000000000000000000000000000000179052516107079190612537565b600060405180830381855afa9150503d8060008114610742576040519150601f19603f3d011682016040523d82523d6000602084013e610747565b606091505b509150915081158061075a575060208151105b8061079c575080601f8151811061077357610773612553565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016155b156107ae5760009450505050506104dc565b6040517fffffffff000000000000000000000000000000000000000000000000000000008716602482015273ffffffffffffffffffffffffffffffffffffffff84169060440160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a700000000000000000000000000000000000000000000000000000000179052516108579190612537565b600060405180830381855afa9150503d8060008114610892576040519150601f19603f3d011682016040523d82523d6000602084013e610897565b606091505b5090925090508115806108ab575060208151105b806108ed575080601f815181106108c4576108c4612553565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016155b156108ff5760009450505050506104dc565b509095945050505050565b6000828152602081815260408083205467ffffffffffffffff168352600180835281842086855290925282206060915b848111610a21578085161580159061096a57506000818152602083905260408120805461096690612379565b9050115b15610a19578082600083815260200190815260200160002080805461098e90612379565b80601f01602080910402602001604051908101604052809291908181526020018280546109ba90612379565b8015610a075780601f106109dc57610100808354040283529160200191610a07565b820191906000526020600020905b8154815290600101906020018083116109ea57829003601f168201915b50505050509050935093505050610a3a565b60011b61093a565b5060006040518060200160405280600081525092509250505b9250929050565b82610a4b816114b8565b610a5457600080fd5b604080518082018252848152602080820185815260008881528083528481205467ffffffffffffffff1681526006835284812089825283528490209251835551600190920191909155815185815290810184905285917f1d6f5e03d3f63eb58751986629a5439baee5079ff04f345becb66e23eb154e4691015b60405180910390a250505050565b82610ae6816114b8565b610aef57600080fd5b6000848152602081815260408083205467ffffffffffffffff168352600382528083208784529091529020610b2583858361241a565b50837fe379c1624ed7e714cc0937528a32359d69d5281337765313dba4e081b72d75788484604051610ace929190612582565b80610b62816114b8565b610b6b57600080fd5b6000828152602081905260408120805467ffffffffffffffff1691610b8f836125c5565b82546101009290920a67ffffffffffffffff818102199093169183160217909155600084815260208181526040918290205491519190921681528492507fc6621ccb8f3f5a04bb6502154b2caf6adf5983fe76dfef1cfc9c42e3579db444910160405180910390a25050565b600080610c0983603c61139a565b90508051600003610c1d5750600092915050565b610c2681611794565b9392505050565b6000838152602081815260408083205467ffffffffffffffff1683526007825280832086845290915290819020905160609190610c6d9085908590612369565b90815260200160405180910390208054610c8690612379565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb290612379565b8015610cff5780601f10610cd457610100808354040283529160200191610cff565b820191906000526020600020905b815481529060010190602001808311610ce257829003601f168201915b505050505090509392505050565b83610d17816114b8565b610d2057600080fd5b83610d2c6001826125ec565b1615610d3757600080fd5b6000858152602081815260408083205467ffffffffffffffff1683526001825280832088845282528083208784529091529020610d7583858361241a565b50604051849086907faa121bbeef5f32f5961a2a28966e769023910fc9479059ee3495d4c1a696efe390600090a35050505050565b6000818152602081815260408083205467ffffffffffffffff168352600582528083208484529091529020805460609190610de490612379565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1090612379565b8015610e5d5780601f10610e3257610100808354040283529160200191610e5d565b820191906000526020600020905b815481529060010190602001808311610e4057829003601f168201915b50505050509050919050565b82610e73816114b8565b610e7c57600080fd5b6000848152602081815260408083205467ffffffffffffffff168352600582528083208784529091529020610eb283858361241a565b50837fb7d29e911041e8d9b843369e890bcb72c9388692ba48b65ac54e7214c4c348f78484604051610ace929190612582565b82610eef816114b8565b610ef857600080fd5b837f65412581168e88a1e60c6459d7f44ae83ad0832e670826c05a4e2476b57af7528484604051610f2a929190611eac565b60405180910390a2603c8303610f8e57837f52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd2610f6584611794565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a25b6000848152602081815260408083205467ffffffffffffffff1683526002825280832087845282528083208684529091529020610fcb83826125ff565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff8216330361107c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b33600081815260086020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff82163303611192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f53657474696e672064656c65676174652073746174757320666f722073656c666044820152606401611073565b336000818152600960209081526040808320878452825280832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519384529286917ff0ddb3b04746704017f9aa8bd728fcc2c1d11675041205350018915f5e4750a0910160405180910390a4505050565b6060610c26600084846117bc565b6000818152602081815260408083205467ffffffffffffffff168352600382528083208484529091529020805460609190610de490612379565b81611284816114b8565b61128d57600080fd5b61129c83603c6102f1856119af565b505050565b60606112ae8484846117bc565b949350505050565b826112c0816114b8565b6112c957600080fd5b6000848152602081815260408083205467ffffffffffffffff1683526004825280832087845282528083207fffffffff0000000000000000000000000000000000000000000000000000000087168085529083529281902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8716908117909155905190815286917f7c69f06bea0bdef565b709e93a147836b0063ba2dd89f02d0b7e8d931e6a6daa910160405180910390a350505050565b6000828152602081815260408083205467ffffffffffffffff16835260028252808320858452825280832084845290915290208054606091906113dc90612379565b80601f016020809104026020016040519081016040528092919081815260200182805461140890612379565b80156114555780601f1061142a57610100808354040283529160200191611455565b820191906000526020600020905b81548152906001019060200180831161143857829003601f168201915b5050505050905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f59d1d43c0000000000000000000000000000000000000000000000000000000014806104dc57506104dc826119e8565b60003373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061153357503373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016145b1561154057506001919050565b6040517f02571be3000000000000000000000000000000000000000000000000000000008152600481018390526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906302571be390602401602060405180830381865afa1580156115ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f291906126bf565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116f9576040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e90602401602060405180830381865afa1580156116d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f691906126bf565b90505b73ffffffffffffffffffffffffffffffffffffffff811633148061174d575073ffffffffffffffffffffffffffffffffffffffff8116600090815260086020908152604080832033845290915290205460ff165b80610c26575073ffffffffffffffffffffffffffffffffffffffff81166000908152600960209081526040808320868452825280832033845290915290205460ff16610c26565b600081516014146117a457600080fd5b50602001516c01000000000000000000000000900490565b60608167ffffffffffffffff8111156117d7576117d7611fbc565b60405190808252806020026020018201604052801561180a57816020015b60608152602001906001900390816117f55790505b50905060005b828110156119a75784156118ef57600084848381811061183257611832612553565b905060200281019061184491906126dc565b61185391602491600491612741565b61185c9161276b565b90508581146118ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f6d756c746963616c6c3a20416c6c207265636f726473206d757374206861766560448201527f2061206d61746368696e67206e616d65686173680000000000000000000000006064820152608401611073565b505b6000803086868581811061190557611905612553565b905060200281019061191791906126dc565b604051611925929190612369565b600060405180830381855af49150503d8060008114611960576040519150601f19603f3d011682016040523d82523d6000602084013e611965565b606091505b50915091508161197457600080fd5b8084848151811061198757611987612553565b60200260200101819052505050808061199f90612789565b915050611810565b509392505050565b6040805160148082528183019092526060916020820181803683375050506c010000000000000000000000009290920260208301525090565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fc86902330000000000000000000000000000000000000000000000000000000014806104dc57506104dc8260007fffffffff0000000000000000000000000000000000000000000000000000000082167f691f34310000000000000000000000000000000000000000000000000000000014806104dc57506104dc8260007fffffffff0000000000000000000000000000000000000000000000000000000082167f124a319c0000000000000000000000000000000000000000000000000000000014806104dc57506104dc8260007fffffffff0000000000000000000000000000000000000000000000000000000082167fbc1c58d10000000000000000000000000000000000000000000000000000000014806104dc57506104dc8260007fffffffff0000000000000000000000000000000000000000000000000000000082167f3b3b57de000000000000000000000000000000000000000000000000000000001480611bbf57507fffffffff0000000000000000000000000000000000000000000000000000000082167ff1cb7e0600000000000000000000000000000000000000000000000000000000145b806104dc57506104dc8260007fffffffff0000000000000000000000000000000000000000000000000000000082167f2203ab560000000000000000000000000000000000000000000000000000000014806104dc57506104dc8260007fffffffff0000000000000000000000000000000000000000000000000000000082167fd700ff330000000000000000000000000000000000000000000000000000000014806104dc57506104dc8260007fffffffff0000000000000000000000000000000000000000000000000000000082167f4fbf04330000000000000000000000000000000000000000000000000000000014806104dc57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146104dc565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114611d3257600080fd5b919050565b600060208284031215611d4957600080fd5b610c2682611d02565b60008083601f840112611d6457600080fd5b50813567ffffffffffffffff811115611d7c57600080fd5b602083019150836020828501011115610a3a57600080fd5b600080600080600060608688031215611dac57600080fd5b85359450602086013567ffffffffffffffff80821115611dcb57600080fd5b611dd789838a01611d52565b90965094506040880135915080821115611df057600080fd5b50611dfd88828901611d52565b969995985093965092949392505050565b60008060408385031215611e2157600080fd5b82359150611e3160208401611d02565b90509250929050565b60008060408385031215611e4d57600080fd5b50508035926020909101359150565b60005b83811015611e77578181015183820152602001611e5f565b50506000910152565b60008151808452611e98816020860160208601611e5c565b601f01601f19169290920160200192915050565b8281526040602082015260006112ae6040830184611e80565b600080600060608486031215611eda57600080fd5b505081359360208301359350604090920135919050565b600080600060408486031215611f0657600080fd5b83359250602084013567ffffffffffffffff811115611f2457600080fd5b611f3086828701611d52565b9497909650939450505050565b600060208284031215611f4f57600080fd5b5035919050565b602081526000610c266020830184611e80565b60008060008060608587031215611f7f57600080fd5b8435935060208501359250604085013567ffffffffffffffff811115611fa457600080fd5b611fb087828801611d52565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561200057600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561202657600080fd5b818601915086601f83011261203a57600080fd5b81358181111561204c5761204c611fbc565b604051601f8201601f19908116603f0116810190838211818310171561207457612074611fbc565b8160405282815289602084870101111561208d57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b73ffffffffffffffffffffffffffffffffffffffff811681146120d157600080fd5b50565b80358015158114611d3257600080fd5b600080604083850312156120f757600080fd5b8235612102816120af565b9150611e31602084016120d4565b60008060006060848603121561212557600080fd5b833592506020840135612137816120af565b9150612145604085016120d4565b90509250925092565b60008060006060848603121561216357600080fd5b833561216e816120af565b9250602084013591506040840135612185816120af565b809150509250925092565b60008083601f8401126121a257600080fd5b50813567ffffffffffffffff8111156121ba57600080fd5b6020830191508360208260051b8501011115610a3a57600080fd5b600080602083850312156121e857600080fd5b823567ffffffffffffffff8111156121ff57600080fd5b61220b85828601612190565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561228a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612278858351611e80565b9450928501929085019060010161223e565b5092979650505050505050565b600080604083850312156122aa57600080fd5b8235915060208301356122bc816120af565b809150509250929050565b6000806000604084860312156122dc57600080fd5b83359250602084013567ffffffffffffffff8111156122fa57600080fd5b611f3086828701612190565b60008060006060848603121561231b57600080fd5b8335925061232b60208501611d02565b91506040840135612185816120af565b6000806040838503121561234e57600080fd5b8235612359816120af565b915060208301356122bc816120af565b8183823760009101908152919050565b600181811c9082168061238d57607f821691505b6020821081036123c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561129c57600081815260208120601f850160051c810160208610156123f35750805b601f850160051c820191505b81811015612412578281556001016123ff565b505050505050565b67ffffffffffffffff83111561243257612432611fbc565b612446836124408354612379565b836123cc565b6000601f84116001811461247a57600085156124625750838201355b600019600387901b1c1916600186901b178355610fcb565b600083815260209020601f19861690835b828110156124ab578685013582556020948501946001909201910161248b565b50868210156124c85760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b6040815260006125196040830186886124da565b828103602084015261252c8185876124da565b979650505050505050565b60008251612549818460208701611e5c565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020815260006112ae6020830184866124da565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff8083168181036125e2576125e2612596565b6001019392505050565b818103818111156104dc576104dc612596565b815167ffffffffffffffff81111561261957612619611fbc565b61262d816126278454612379565b846123cc565b602080601f831160018114612662576000841561264a5750858301515b600019600386901b1c1916600185901b178555612412565b600085815260208120601f198616915b8281101561269157888601518255948401946001909101908401612672565b50858210156126af5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156126d157600080fd5b8151610c26816120af565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261271157600080fd5b83018035915067ffffffffffffffff82111561272c57600080fd5b602001915036819003821315610a3a57600080fd5b6000808585111561275157600080fd5b8386111561275e57600080fd5b5050820193919092039150565b803560208310156104dc57600019602084900360031b1b1692915050565b6000600019820361279c5761279c612596565b506001019056fea26469706673582212201085d748811cc3098063463f28c28264d4a52e1116ae8fa6755526b426a328ec64736f6c63430008110033";

type PublicResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PublicResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PublicResolver__factory extends ContractFactory {
  constructor(...args: PublicResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ins: PromiseOrValue<string>,
    wrapperAddress: PromiseOrValue<string>,
    _trustedETHController: PromiseOrValue<string>,
    _trustedReverseRegistrar: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PublicResolver> {
    return super.deploy(
      _ins,
      wrapperAddress,
      _trustedETHController,
      _trustedReverseRegistrar,
      overrides || {}
    ) as Promise<PublicResolver>;
  }
  override getDeployTransaction(
    _ins: PromiseOrValue<string>,
    wrapperAddress: PromiseOrValue<string>,
    _trustedETHController: PromiseOrValue<string>,
    _trustedReverseRegistrar: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _ins,
      wrapperAddress,
      _trustedETHController,
      _trustedReverseRegistrar,
      overrides || {}
    );
  }
  override attach(address: string): PublicResolver {
    return super.attach(address) as PublicResolver;
  }
  override connect(signer: Signer): PublicResolver__factory {
    return super.connect(signer) as PublicResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PublicResolverInterface {
    return new utils.Interface(_abi) as PublicResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PublicResolver {
    return new Contract(address, _abi, signerOrProvider) as PublicResolver;
  }
}
