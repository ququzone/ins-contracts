/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ExtendedResolver,
  ExtendedResolverInterface,
} from "../../../../src/resolvers/profiles/ExtendedResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102ea806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639061b92314610030575b600080fd5b61004361003e3660046101bf565b610059565b6040516100509190610247565b60405180910390f35b60606000803073ffffffffffffffffffffffffffffffffffffffff16846040516100839190610298565b600060405180830381855afa9150503d80600081146100be576040519150601f19603f3d011682016040523d82523d6000602084013e6100c3565b606091505b509150915081156100d75791506100df9050565b805160208201fd5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261012557600080fd5b813567ffffffffffffffff80821115610140576101406100e5565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610186576101866100e5565b8160405283815286602085880101111561019f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156101d257600080fd5b823567ffffffffffffffff808211156101ea57600080fd5b6101f686838701610114565b9350602085013591508082111561020c57600080fd5b5061021985828601610114565b9150509250929050565b60005b8381101561023e578181015183820152602001610226565b50506000910152565b6020815260008251806020840152610266816040850160208701610223565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082516102aa818460208701610223565b919091019291505056fea26469706673582212204fdd683fde9a06e83bff5fdd43c227f24cfffdc85974b9d59dd25133189c92b364736f6c63430008110033";

type ExtendedResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExtendedResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExtendedResolver__factory extends ContractFactory {
  constructor(...args: ExtendedResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExtendedResolver> {
    return super.deploy(overrides || {}) as Promise<ExtendedResolver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExtendedResolver {
    return super.attach(address) as ExtendedResolver;
  }
  override connect(signer: Signer): ExtendedResolver__factory {
    return super.connect(signer) as ExtendedResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExtendedResolverInterface {
    return new utils.Interface(_abi) as ExtendedResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExtendedResolver {
    return new Contract(address, _abi, signerOrProvider) as ExtendedResolver;
  }
}
