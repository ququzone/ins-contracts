/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OwnedResolver,
  OwnedResolverInterface,
} from "../../../src/resolvers/OwnedResolver";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "contentType",
        type: "uint256",
      },
    ],
    name: "ABIChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "AddrChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "coinType",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "newAddress",
        type: "bytes",
      },
    ],
    name: "AddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "hash",
        type: "bytes",
      },
    ],
    name: "ContenthashChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementer",
        type: "address",
      },
    ],
    name: "InterfaceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NameChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "x",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "y",
        type: "bytes32",
      },
    ],
    name: "PubkeyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "indexedKey",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "TextChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "newVersion",
        type: "uint64",
      },
    ],
    name: "VersionChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "contentTypes",
        type: "uint256",
      },
    ],
    name: "ABI",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "addr",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "coinType",
        type: "uint256",
      },
    ],
    name: "addr",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "clearRecords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "contenthash",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "interfaceImplementer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "pubkey",
    outputs: [
      {
        internalType: "bytes32",
        name: "x",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "y",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "recordVersions",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "contentType",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "setABI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "coinType",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "a",
        type: "bytes",
      },
    ],
    name: "setAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "setAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "hash",
        type: "bytes",
      },
    ],
    name: "setContenthash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "implementer",
        type: "address",
      },
    ],
    name: "setInterface",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "newName",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "x",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "y",
        type: "bytes32",
      },
    ],
    name: "setPubkey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "setText",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "text",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61208e8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063715018a6116100e3578063c86902331161008c578063e59d895d11610066578063e59d895d146103dc578063f1cb7e06146103ef578063f2fde38b1461040257600080fd5b8063c86902331461032c578063d5fa2b0014610386578063d700ff331461039957600080fd5b80638da5cb5b116100bd5780638da5cb5b146102e85780639061b92314610306578063bc1c58d11461031957600080fd5b8063715018a6146102ba57806377372213146102c25780638b95dd71146102d557600080fd5b8063304e6ade1161014557806359d1d43c1161011f57806359d1d43c14610274578063623195b014610294578063691f3431146102a757600080fd5b8063304e6ade1461023b5780633603d7581461024e5780633b3b57de1461026157600080fd5b8063124a319c11610176578063124a319c146101cf5780632203ab561461020757806329cd62ea1461022857600080fd5b806301ffc9a71461019257806310f13a8c146101ba575b600080fd5b6101a56101a03660046117ef565b610415565b60405190151581526020015b60405180910390f35b6101cd6101c836600461184c565b610426565b005b6101e26101dd3660046118c6565b610508565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b1565b61021a6102153660046118f2565b610865565b6040516101b1929190611964565b6101cd610236366004611985565b61099d565b6101cd6102493660046119b1565b610a52565b6101cd61025c3660046119fd565b610ae3565b6101e261026f3660046119fd565b610b9b565b6102876102823660046119b1565b610bcd565b6040516101b19190611a16565b6101cd6102a2366004611a29565b610caf565b6102876102b53660046119fd565b610d61565b6101cd610e22565b6101cd6102d03660046119b1565b610e36565b6101cd6102e3366004611b38565b610ec7565b60005473ffffffffffffffffffffffffffffffffffffffff166101e2565b610287610314366004611b88565b610fc9565b6102876103273660046119fd565b61104f565b61037161033a3660046119fd565b60008181526001602081815260408084205467ffffffffffffffff1684526007825280842094845293905291902080549101549091565b604080519283526020830191909152016101b1565b6101cd610394366004611c10565b61108b565b6103c36103a73660046119fd565b60016020526000908152604090205467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101b1565b6101cd6103ea366004611c33565b6110c5565b6102876103fd3660046118f2565b6111be565b6101cd610410366004611c6f565b611288565b600061042082611344565b92915050565b600054859073ffffffffffffffffffffffffffffffffffffffff16331461044c57600080fd5b60008681526001602090815260408083205467ffffffffffffffff168352600882528083208984529091529081902090518491849161048e9089908990611c8a565b908152602001604051809103902091826104a9929190611d3b565b5084846040516104ba929190611c8a565b6040518091039020867f448bc014f1536726cf8d54ff3d6481ed3cbc683c2591ca204274009afa09b1a1878787876040516104f89493929190611e62565b60405180910390a3505050505050565b60008281526001602090815260408083205467ffffffffffffffff1683526005825280832085845282528083207fffffffff000000000000000000000000000000000000000000000000000000008516845290915281205473ffffffffffffffffffffffffffffffffffffffff168015610583579050610420565b600061058e85610b9b565b905073ffffffffffffffffffffffffffffffffffffffff81166105b657600092505050610420565b6040517f01ffc9a7000000000000000000000000000000000000000000000000000000006024820152600090819073ffffffffffffffffffffffffffffffffffffffff84169060440160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a700000000000000000000000000000000000000000000000000000000179052516106629190611e94565b600060405180830381855afa9150503d806000811461069d576040519150601f19603f3d011682016040523d82523d6000602084013e6106a2565b606091505b50915091508115806106b5575060208151105b806106f7575080601f815181106106ce576106ce611eb0565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016155b15610709576000945050505050610420565b6040517fffffffff000000000000000000000000000000000000000000000000000000008716602482015273ffffffffffffffffffffffffffffffffffffffff84169060440160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a700000000000000000000000000000000000000000000000000000000179052516107b29190611e94565b600060405180830381855afa9150503d80600081146107ed576040519150601f19603f3d011682016040523d82523d6000602084013e6107f2565b606091505b509092509050811580610806575060208151105b80610848575080601f8151811061081f5761081f611eb0565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016155b1561085a576000945050505050610420565b509095945050505050565b60008281526001602081815260408084205467ffffffffffffffff1684526002825280842086855290915282206060915b84811161097d57808516158015906108c65750600081815260208390526040812080546108c290611c9a565b9050115b1561097557808260008381526020019081526020016000208080546108ea90611c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461091690611c9a565b80156109635780601f1061093857610100808354040283529160200191610963565b820191906000526020600020905b81548152906001019060200180831161094657829003601f168201915b50505050509050935093505050610996565b60011b610896565b5060006040518060200160405280600081525092509250505b9250929050565b600054839073ffffffffffffffffffffffffffffffffffffffff1633146109c357600080fd5b6040805180820182528481526020808201858152600088815260018084528582205467ffffffffffffffff168252600784528582208a835290935284902092518355519101555184907f1d6f5e03d3f63eb58751986629a5439baee5079ff04f345becb66e23eb154e4690610a449086908690918252602082015260400190565b60405180910390a250505050565b600054839073ffffffffffffffffffffffffffffffffffffffff163314610a7857600080fd5b60008481526001602090815260408083205467ffffffffffffffff168352600482528083208784529091529020610ab0838583611d3b565b50837fe379c1624ed7e714cc0937528a32359d69d5281337765313dba4e081b72d75788484604051610a44929190611edf565b600054819073ffffffffffffffffffffffffffffffffffffffff163314610b0957600080fd5b6000828152600160205260408120805467ffffffffffffffff1691610b2d83611f22565b82546101009290920a67ffffffffffffffff8181021990931691831602179091556000848152600160209081526040918290205491519190921681528492507fc6621ccb8f3f5a04bb6502154b2caf6adf5983fe76dfef1cfc9c42e3579db444910160405180910390a25050565b600080610ba983603c6111be565b90508051600003610bbd5750600092915050565b610bc68161139a565b9392505050565b60008381526001602090815260408083205467ffffffffffffffff1683526008825280832086845290915290819020905160609190610c0f9085908590611c8a565b90815260200160405180910390208054610c2890611c9a565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5490611c9a565b8015610ca15780601f10610c7657610100808354040283529160200191610ca1565b820191906000526020600020905b815481529060010190602001808311610c8457829003601f168201915b505050505090509392505050565b600054849073ffffffffffffffffffffffffffffffffffffffff163314610cd557600080fd5b83610ce1600182611f49565b1615610cec57600080fd5b60008581526001602090815260408083205467ffffffffffffffff1683526002825280832088845282528083208784529091529020610d2c838583611d3b565b50604051849086907faa121bbeef5f32f5961a2a28966e769023910fc9479059ee3495d4c1a696efe390600090a35050505050565b60008181526001602090815260408083205467ffffffffffffffff168352600682528083208484529091529020805460609190610d9d90611c9a565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc990611c9a565b8015610e165780601f10610deb57610100808354040283529160200191610e16565b820191906000526020600020905b815481529060010190602001808311610df957829003601f168201915b50505050509050919050565b610e2a6113c2565b610e346000611443565b565b600054839073ffffffffffffffffffffffffffffffffffffffff163314610e5c57600080fd5b60008481526001602090815260408083205467ffffffffffffffff168352600682528083208784529091529020610e94838583611d3b565b50837fb7d29e911041e8d9b843369e890bcb72c9388692ba48b65ac54e7214c4c348f78484604051610a44929190611edf565b600054839073ffffffffffffffffffffffffffffffffffffffff163314610eed57600080fd5b837f65412581168e88a1e60c6459d7f44ae83ad0832e670826c05a4e2476b57af7528484604051610f1f929190611964565b60405180910390a2603c8303610f8357837f52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd2610f5a8461139a565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a25b60008481526001602090815260408083205467ffffffffffffffff1683526003825280832087845282528083208684529091529020610fc28382611f5c565b5050505050565b60606000803073ffffffffffffffffffffffffffffffffffffffff1684604051610ff39190611e94565b600060405180830381855afa9150503d806000811461102e576040519150601f19603f3d011682016040523d82523d6000602084013e611033565b606091505b509150915081156110475791506104209050565b805160208201fd5b60008181526001602090815260408083205467ffffffffffffffff168352600482528083208484529091529020805460609190610d9d90611c9a565b600054829073ffffffffffffffffffffffffffffffffffffffff1633146110b157600080fd5b6110c083603c6102e3856114b8565b505050565b600054839073ffffffffffffffffffffffffffffffffffffffff1633146110eb57600080fd5b60008481526001602090815260408083205467ffffffffffffffff1683526005825280832087845282528083207fffffffff0000000000000000000000000000000000000000000000000000000087168085529083529281902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8716908117909155905190815286917f7c69f06bea0bdef565b709e93a147836b0063ba2dd89f02d0b7e8d931e6a6daa910160405180910390a350505050565b60008281526001602090815260408083205467ffffffffffffffff168352600382528083208584528252808320848452909152902080546060919061120290611c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461122e90611c9a565b801561127b5780601f106112505761010080835404028352916020019161127b565b820191906000526020600020905b81548152906001019060200180831161125e57829003601f168201915b5050505050905092915050565b6112906113c2565b73ffffffffffffffffffffffffffffffffffffffff8116611338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61134181611443565b50565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f59d1d43c0000000000000000000000000000000000000000000000000000000014806104205750610420826114f1565b600081516014146113aa57600080fd5b50602001516c01000000000000000000000000900490565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161132f565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805160148082528183019092526060916020820181803683375050506c010000000000000000000000009290920260208301525090565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fc869023300000000000000000000000000000000000000000000000000000000148061042057506104208260007fffffffff0000000000000000000000000000000000000000000000000000000082167f691f343100000000000000000000000000000000000000000000000000000000148061042057506104208260007fffffffff0000000000000000000000000000000000000000000000000000000082167f124a319c00000000000000000000000000000000000000000000000000000000148061042057506104208260007fffffffff0000000000000000000000000000000000000000000000000000000082167fbc1c58d100000000000000000000000000000000000000000000000000000000148061042057506104208260007fffffffff0000000000000000000000000000000000000000000000000000000082167f3b3b57de0000000000000000000000000000000000000000000000000000000014806116c857507fffffffff0000000000000000000000000000000000000000000000000000000082167ff1cb7e0600000000000000000000000000000000000000000000000000000000145b8061042057506104208260007fffffffff0000000000000000000000000000000000000000000000000000000082167f2203ab5600000000000000000000000000000000000000000000000000000000148061042057506104208260007fffffffff0000000000000000000000000000000000000000000000000000000082167fd700ff3300000000000000000000000000000000000000000000000000000000148061042057507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610420565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146117ea57600080fd5b919050565b60006020828403121561180157600080fd5b610bc6826117ba565b60008083601f84011261181c57600080fd5b50813567ffffffffffffffff81111561183457600080fd5b60208301915083602082850101111561099657600080fd5b60008060008060006060868803121561186457600080fd5b85359450602086013567ffffffffffffffff8082111561188357600080fd5b61188f89838a0161180a565b909650945060408801359150808211156118a857600080fd5b506118b58882890161180a565b969995985093965092949392505050565b600080604083850312156118d957600080fd5b823591506118e9602084016117ba565b90509250929050565b6000806040838503121561190557600080fd5b50508035926020909101359150565b60005b8381101561192f578181015183820152602001611917565b50506000910152565b60008151808452611950816020860160208601611914565b601f01601f19169290920160200192915050565b82815260406020820152600061197d6040830184611938565b949350505050565b60008060006060848603121561199a57600080fd5b505081359360208301359350604090920135919050565b6000806000604084860312156119c657600080fd5b83359250602084013567ffffffffffffffff8111156119e457600080fd5b6119f08682870161180a565b9497909650939450505050565b600060208284031215611a0f57600080fd5b5035919050565b602081526000610bc66020830184611938565b60008060008060608587031215611a3f57600080fd5b8435935060208501359250604085013567ffffffffffffffff811115611a6457600080fd5b611a708782880161180a565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112611abc57600080fd5b813567ffffffffffffffff80821115611ad757611ad7611a7c565b604051601f8301601f19908116603f01168101908282118183101715611aff57611aff611a7c565b81604052838152866020858801011115611b1857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611b4d57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115611b7257600080fd5b611b7e86828701611aab565b9150509250925092565b60008060408385031215611b9b57600080fd5b823567ffffffffffffffff80821115611bb357600080fd5b611bbf86838701611aab565b93506020850135915080821115611bd557600080fd5b50611be285828601611aab565b9150509250929050565b803573ffffffffffffffffffffffffffffffffffffffff811681146117ea57600080fd5b60008060408385031215611c2357600080fd5b823591506118e960208401611bec565b600080600060608486031215611c4857600080fd5b83359250611c58602085016117ba565b9150611c6660408501611bec565b90509250925092565b600060208284031215611c8157600080fd5b610bc682611bec565b8183823760009101908152919050565b600181811c90821680611cae57607f821691505b602082108103611ce7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156110c057600081815260208120601f850160051c81016020861015611d145750805b601f850160051c820191505b81811015611d3357828155600101611d20565b505050505050565b67ffffffffffffffff831115611d5357611d53611a7c565b611d6783611d618354611c9a565b83611ced565b6000601f841160018114611db95760008515611d835750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610fc2565b600083815260209020601f19861690835b82811015611dea5786850135825560209485019460019092019101611dca565b5086821015611e25577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b604081526000611e76604083018688611e37565b8281036020840152611e89818587611e37565b979650505050505050565b60008251611ea6818460208701611914565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60208152600061197d602083018486611e37565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff808316818103611f3f57611f3f611ef3565b6001019392505050565b8181038181111561042057610420611ef3565b815167ffffffffffffffff811115611f7657611f76611a7c565b611f8a81611f848454611c9a565b84611ced565b602080601f831160018114611fdd5760008415611fa75750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611d33565b600085815260208120601f198616915b8281101561200c57888601518255948401946001909101908401611fed565b508582101561204857878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212203a6be0796c26d0ad034d25acedde9eb0ce8d9d3a4e83a9a033c9989d905c518964736f6c63430008110033";

type OwnedResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnedResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnedResolver__factory extends ContractFactory {
  constructor(...args: OwnedResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OwnedResolver> {
    return super.deploy(overrides || {}) as Promise<OwnedResolver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OwnedResolver {
    return super.attach(address) as OwnedResolver;
  }
  override connect(signer: Signer): OwnedResolver__factory {
    return super.connect(signer) as OwnedResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnedResolverInterface {
    return new utils.Interface(_abi) as OwnedResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnedResolver {
    return new Contract(address, _abi, signerOrProvider) as OwnedResolver;
  }
}
