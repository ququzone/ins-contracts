{
  "address": "0xC5d4A98ADC885b13E01f60CCF1229f046534bC39",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "valid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x9194e999eedd97a556570f64d2834d1d396b315b85f2679604ac465521ae50b9",
  "receipt": {
    "to": null,
    "from": "0x7c029553644F5E9442cb576c1056e0f7663Db1Fa",
    "contractAddress": "0xC5d4A98ADC885b13E01f60CCF1229f046534bC39",
    "transactionIndex": 0,
    "gasUsed": "479449",
    "logsBloom": "0x
    "blockHash": "0xe10610b32cfe40b5b38ac3bc52b41bf66be9784dec10dfa73df944b1332d452c",
    "transactionHash": "0x9194e999eedd97a556570f64d2834d1d396b315b85f2679604ac465521ae50b9",
    "logs": [],
    "blockNumber": 20553102,
    "cumulativeGasUsed": "479449",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "eaf113cd573dbe6eae9f75d9e42fd924",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"valid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/iotxregistrar/ZeroWidthNameChecker.sol\":\"ZeroWidthNameChecker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1300},\"remappings\":[]},\"sources\":{\"src/iotxregistrar/INameChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\ninterface INameChecker {\\n    function valid(string memory name) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x365b7e19d465b1995960e13628c6d0df6ffe6a642c74c52bd1645ea615ddd1b4\",\"license\":\"MIT\"},\"src/iotxregistrar/StringUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4;\\n\\nlibrary StringUtils {\\n    /**\\n     * @dev Returns the length of a given string\\n     *\\n     * @param s The string to measure the length of\\n     * @return The length of the input string\\n     */\\n    function strlen(string memory s) internal pure returns (uint256) {\\n        uint256 len;\\n        uint256 i = 0;\\n        uint256 bytelength = bytes(s).length;\\n        for (len = 0; i < bytelength; len++) {\\n            bytes1 b = bytes(s)[i];\\n            if (b < 0x80) {\\n                i += 1;\\n            } else if (b < 0xE0) {\\n                i += 2;\\n            } else if (b < 0xF0) {\\n                i += 3;\\n            } else if (b < 0xF8) {\\n                i += 4;\\n            } else if (b < 0xFC) {\\n                i += 5;\\n            } else {\\n                i += 6;\\n            }\\n        }\\n        return len;\\n    }\\n}\\n\",\"keccak256\":\"0xe17bcc269748774d98a8e9b1577a402c96e46fcb489c322f3b97dd2461b05a2c\",\"license\":\"MIT\"},\"src/iotxregistrar/ZeroWidthNameChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./INameChecker.sol\\\";\\nimport \\\"./StringUtils.sol\\\";\\n\\ncontract ZeroWidthNameChecker is INameChecker {\\n    using StringUtils for string;\\n\\n    function valid(string memory name) public pure returns (bool) {\\n        if (name.strlen() < 3) {\\n            return false;\\n        }\\n        bytes memory nb = bytes(name);\\n        // zero width for /u200b /u200c /u200d and U+FEFF\\n        for (uint256 i; i < nb.length - 2; i++) {\\n            if (bytes1(nb[i]) == 0xe2 && bytes1(nb[i + 1]) == 0x80) {\\n                if (bytes1(nb[i + 2]) == 0x8b || bytes1(nb[i + 2]) == 0x8c || bytes1(nb[i + 2]) == 0x8d) {\\n                    return false;\\n                }\\n            } else if (bytes1(nb[i]) == 0xef) {\\n                if (bytes1(nb[i + 1]) == 0xbb && bytes1(nb[i + 2]) == 0xbf) return false;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x5b7492d9bea7700389ad524d2e274c70ee270e3ffea22dce740074dab31fa55e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610611806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639791c09714610030575b600080fd5b61004361003e3660046104b9565b610057565b604051901515815260200160405180910390f35b6000600361006483610330565b101561007257506000919050565b8160005b600282516100849190610580565b8110156103265781818151811061009d5761009d610599565b6020910101516001600160f81b0319167fe2000000000000000000000000000000000000000000000000000000000000001480156101095750816100e28260016105af565b815181106100f2576100f2610599565b6020910101516001600160f81b031916600160ff1b145b1561021a578161011a8260026105af565b8151811061012a5761012a610599565b6020910101516001600160f81b0319167f8b0000000000000000000000000000000000000000000000000000000000000014806101b157508161016e8260026105af565b8151811061017e5761017e610599565b6020910101516001600160f81b0319167f8c00000000000000000000000000000000000000000000000000000000000000145b806102065750816101c38260026105af565b815181106101d3576101d3610599565b6020910101516001600160f81b0319167f8d00000000000000000000000000000000000000000000000000000000000000145b15610215575060009392505050565b610314565b81818151811061022c5761022c610599565b01602001516001600160f81b0319167fef0000000000000000000000000000000000000000000000000000000000000003610314578161026d8260016105af565b8151811061027d5761027d610599565b6020910101516001600160f81b0319167fbb000000000000000000000000000000000000000000000000000000000000001480156103055750816102c28260026105af565b815181106102d2576102d2610599565b6020910101516001600160f81b0319167fbf00000000000000000000000000000000000000000000000000000000000000145b15610314575060009392505050565b8061031e816105c2565b915050610076565b5060019392505050565b8051600090819081905b8082101561049a57600085838151811061035657610356610599565b01602001516001600160f81b0319169050600160ff1b8110156103855761037e6001846105af565b9250610487565b7fe0000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156103c25761037e6002846105af565b7ff0000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156103ff5761037e6003846105af565b7ff8000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216101561043c5761037e6004846105af565b7ffc000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156104795761037e6005846105af565b6104846006846105af565b92505b5082610492816105c2565b93505061033a565b50909392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104cb57600080fd5b813567ffffffffffffffff808211156104e357600080fd5b818401915084601f8301126104f757600080fd5b813581811115610509576105096104a3565b604051601f8201601f19908116603f01168101908382118183101715610531576105316104a3565b8160405282815287602084870101111561054a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156105935761059361056a565b92915050565b634e487b7160e01b600052603260045260246000fd5b808201808211156105935761059361056a565b6000600182016105d4576105d461056a565b506001019056fea2646970667358221220ddfe21e14b08b9e2883b0e715a3383dc16b6c5e2e8e044ce35d52a34a9a546fe64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80639791c09714610030575b600080fd5b61004361003e3660046104b9565b610057565b604051901515815260200160405180910390f35b6000600361006483610330565b101561007257506000919050565b8160005b600282516100849190610580565b8110156103265781818151811061009d5761009d610599565b6020910101516001600160f81b0319167fe2000000000000000000000000000000000000000000000000000000000000001480156101095750816100e28260016105af565b815181106100f2576100f2610599565b6020910101516001600160f81b031916600160ff1b145b1561021a578161011a8260026105af565b8151811061012a5761012a610599565b6020910101516001600160f81b0319167f8b0000000000000000000000000000000000000000000000000000000000000014806101b157508161016e8260026105af565b8151811061017e5761017e610599565b6020910101516001600160f81b0319167f8c00000000000000000000000000000000000000000000000000000000000000145b806102065750816101c38260026105af565b815181106101d3576101d3610599565b6020910101516001600160f81b0319167f8d00000000000000000000000000000000000000000000000000000000000000145b15610215575060009392505050565b610314565b81818151811061022c5761022c610599565b01602001516001600160f81b0319167fef0000000000000000000000000000000000000000000000000000000000000003610314578161026d8260016105af565b8151811061027d5761027d610599565b6020910101516001600160f81b0319167fbb000000000000000000000000000000000000000000000000000000000000001480156103055750816102c28260026105af565b815181106102d2576102d2610599565b6020910101516001600160f81b0319167fbf00000000000000000000000000000000000000000000000000000000000000145b15610314575060009392505050565b8061031e816105c2565b915050610076565b5060019392505050565b8051600090819081905b8082101561049a57600085838151811061035657610356610599565b01602001516001600160f81b0319169050600160ff1b8110156103855761037e6001846105af565b9250610487565b7fe0000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156103c25761037e6002846105af565b7ff0000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156103ff5761037e6003846105af565b7ff8000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216101561043c5761037e6004846105af565b7ffc000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156104795761037e6005846105af565b6104846006846105af565b92505b5082610492816105c2565b93505061033a565b50909392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104cb57600080fd5b813567ffffffffffffffff808211156104e357600080fd5b818401915084601f8301126104f757600080fd5b813581811115610509576105096104a3565b604051601f8201601f19908116603f01168101908382118183101715610531576105316104a3565b8160405282815287602084870101111561054a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156105935761059361056a565b92915050565b634e487b7160e01b600052603260045260246000fd5b808201808211156105935761059361056a565b6000600182016105d4576105d461056a565b506001019056fea2646970667358221220ddfe21e14b08b9e2883b0e715a3383dc16b6c5e2e8e044ce35d52a34a9a546fe64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}